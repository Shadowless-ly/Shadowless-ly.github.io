<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[使用Hexo与Gitpages搭建博客]]></title>
    <url>%2Fhexo%2F%E4%BD%BF%E7%94%A8Hexo%E4%B8%8EGitpages%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[使用Hexo与Gitpages搭建博客一直使用为知笔记这款笔记软件来整理并记录自己学习的和感兴趣的东西。但是近段时间为知笔记的会员过期了，也不想每年花钱用这些笔记软件。忽然萌生出写博客这个想法。因为单纯想作为个人笔记使用，想要自己折腾折腾，所以不考虑使用博客园，CSDN这类的技术博客。经过一番搜索，调查，觉得用gitpages来托管静态页面这个方式还是挺适合的，不需要买云空间，而且也有现成的框架。 各种度娘，谷歌，折腾了一番，这个Blog也差不多能用了，趁热打铁，整理一下搭建过程。 搭建本地Hexo运行环境我们需要先在本地搭建Hexo运行环境，安装Hexo并初始化我们的博客，然后进行一些配置修改，使其可以本地正常访问。 了解Hexo Hexo是高效的静态站点生成框架，她基于Node.js。 通过 Hexo 你可以轻松地使用 Markdown 编写文章，除了 Markdown 本身的语法之外，还可以使用 Hexo 提供的标签插件来快速的插入特定形式的内容，而且相对于其他框架，Hexo在速度上也有很大优势。 Hexo Git版本管理工具安装Git是目前世界上最先进的分布式版本控制系统。我们可以使用它对代码，文档等文件进行版本管理。在本次博客搭建过程中，它的主要作用是帮助我们从github远程仓库获取各种工具，以及将Hexo生成的静态页面同步到远程仓库。而且对Windows来说可以使用其minitty作为命令行的替代。 Windows：下载并安装 git。 Mac：使用 Homebrew, MacPorts ：brew install git；或下载 安装程序 安装。 Linux (Ubuntu, Debian)：sudo apt-get install git-core Linux (Fedora, Red Hat, CentOS)：sudo yum install git-core Windows用户 由于天朝众所周知的原因，下载git会非常缓慢，建议使用代理。或者可以参考这里Git for Windows 国内下载站。 如果想学习Git的使用，推荐一下廖老师的教程 廖雪峰的官方网站 Node.js环境搭建由于Hexo是基于Node.js，所以我们必须先准备好Node.js环境。 了解Node.js Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。Node.js 的包管理器 npm，是全球最大的开源库生态系统。 Node Node.js安装使用nvm来安装Node.jsWget使用curl安装$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh 使用Wget安装$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh 安装完成后重启终端，执行以下命令安装Node.js1nvm install stable 也可以直接下载安装程序执行安装 安装hexo使用Node.js的包管理工具npm安装hexo1npm install -g hexo-cli 安装完成后，可以在命令行终端试一下hexo是否可以使用 若不能使用，可以检查以下几方面： npm install过程是否有异常 检查环境变量是否正常，安装时会在/usr/bin/中创建hexo可执行程序的软链接 若链接不存在，检查/usr/lib/node_modules/hexo/bin/hexo是否存在，手工在/usr/bin/下创建链接ln -s /usr/lib/node_modules/hexo/bin/hexo /usr/bin/hexo 使用Hexo建站初始化使用如下命令，hexo可以在一个指定文件夹(blog)中创建所需文件 123$ hexo init blog$ cd blog$ npm install 完成后使用tree blog可以得到目录树如下 12345678.├── _config.yml # 网站的配置信息，您可以在此配置大部分的参数。├── package.json # 应用程序的信息。├── scaffolds # 模版文件夹。新建文章时，Hexo会根据 scaffold 来建立文件。├── source # 资源文件夹是存放用户资源的地方| ├── _drafts| └── _posts└── themes # 主题文件夹。Hexo会根据主题来生成静态页面。 Hexo基本配置在blog目录下，_config.yml中为用户可以自定义的配置，我们可以从Hexo官网了解各个参数的意义。下面列出我搭建时的修改项。 12345678# Sitetitle: Shadowlesssubtitle: 备忘录description: 求知若饥，虚心若愚keywords: blogauthor: Shadowlesslanguage: zh-CNtimezone: Asia/Shanghai 参数 描述 title 网站标题 subtitle 网站副标题 description 网站描述 author 您的名字 language 网站使用的语言，如：zh-CN timezone 网站时区。Hexo 默认使用您电脑的时区。如：Asia/Shanghai 1234567# URL## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;url: http://shadowless.toproot: /# permalink: :year/:month/:day/:title/permalink: :category/:title/permalink_defaults: 参数 描述 默认值 url 网址 root 网站根目录 permalink 文章的永久链接格式 :year/:month/:day/:title/ permalink_defaults 永久链接中各部分的默认值 以上参数自定义完成后可以执行hexo g生成静态页面 然后输入命令hexo s --debug，以debug模式启动hexo的server模块 待启动成功后可以使用浏览器输入本地回环地址http://localhost:4000/ or http://127.0.0.1:4000/访问你所创建的博客页面。 以上基本配置已经完成，接下来我们来学习一下文章的创建，主题的配置，以及将本地搭建完成的博客部署到gitgub。 新建文章我们可以使用 hexo new post “文章名”来新建一篇文章新建的内容会在blog/source/_posts/目录中，由你指定的文章名命名，后缀为.md。我们可以直接使用markdown语法编写该文件。 将博客部署到GithubGithub账户与仓库配置新建仓库首先我们打开“全球最大同性交友网站gayhub”，然后注册一个账户。 登录账户，在网页上方状态栏找到一个加号，点击New repository。 接下来会让你填写仓库名称，这里需要填写的格式为：用户名.github.io。如图所示，设置为public仓库，可以不用README初始化仓库，也可以不添加.gitignore和license。然后点击下方Create repository即可。 完成后我们会跳转至该仓库，在该页会有在本地添加远程仓库的指导以及HTTPS和SSH链接。 配置SSH keys我们选择使用ssh进行部署。需要生成一对ssh认证的密钥，然后将公钥添加到你的github账户。 分为如下步骤: 检查SSH keys是否存在 生成新的ssh key 将ssh key添加到GitHub中 keys所在目录为~/.ssh/中，检查目标文件id_rsa, id_rsa.pub是否存在。 若文件不存在，我们需要重新生成密钥。在命令行中输入ssh-keygen -t rsa -C &quot;your_email@example.com&quot;，为了方便可以一路按回车，不需要输入其他内容，默认会在相应路径下（/your_home_path）生成id_rsa和id_rsa.pub两个文件，如下面代码所示 1234ssh-keygen -t rsa -C "your_email@example.com"# Creates a new ssh key using the provided emailGenerating public/private rsa key pair.Enter file in which to save the key (/your_home_path/.ssh/id_rsa): 将新生成的key添加到ssh-agent中: 1234# start the ssh-agent in the backgroundeval "$(ssh-agent -s)"Agent pid 59566ssh-add ~/.ssh/id_rsa 将ssh key添加到GitHub中: 打开Github，点击右上角加号，选择Settings 选择左侧一列中SSH and GPG keys。 选择New SSH key。 打开本地~/.ssh/id_rsa.pub文件将其中内容复制出来，粘贴到github页面key的输入框中。 点击 add SSH Key完成添加 修改配置文件打开博客根目录下的_config.yml配置文件，找到deploy一栏，按照如下模板填写。 1234567# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: 你github仓库的SSH链接 branch: master message: update my blog 将博客部署到远程首先我们需要生成网页的静态文件：1hexo generate 然后使用命令将生成的静态文件PUSH到github远程仓库：1hexo deploy 等待完成后可以访问你的用户名.github.io来进入博客了。 每次更新文章后都可以使用hexo generate生成静态文件，再hexo deploy将其push到github。 后续会增加关于Next主题的配置 HOME]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[第一篇文章]]></title>
    <url>%2Fother%2F%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%2F</url>
    <content type="text"><![CDATA[折腾了两个晚上，翻了几篇教程，终于将这个Blog搭起来了。想在这里记录一下自己的学习，工作，生活，就当是一个记事本啦。 先记录一下搭建时参考的教程吧： 1.首先时hexo的官方文档 https://hexo.io/zh-cn/docs/ 2.接下来时NexT主题的相关配置 https://www.jianshu.com/p/3ff20be8574c 后面我也会总结一下自己的搭建过程。 顺便测试一下图床七牛云]]></content>
      <categories>
        <category>other</category>
      </categories>
      <tags>
        <tag>other</tag>
      </tags>
  </entry>
</search>
